{"version":3,"sources":["types/index.js","actions/index.js","components/Header.jsx","components/HomePage.jsx","containers/NewQuiz.jsx","containers/EditQuiz.jsx","components/Loader.jsx","components/Quizset.jsx","containers/Login.jsx","containers/Signup.jsx","components/Profile.jsx","components/Scores.jsx","components/Score.jsx","containers/PlayQuiz.jsx","components/ScoreCard.jsx","containers/ListQuizzes.jsx","containers/Home.jsx","reducers/quizzes.js","reducers/users.js","reducers/admins.js","reducers/quizset.js","reducers/score.js","reducers/rootReducer.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["SET_QUIZZES","SET_USERS","SET_USER","SET_ADMINS","SET_QUIZSETS","SET_QUESTIONS","SET_QUESTION","SET_SCORES","SET_SCORE","SET_QUIZSET","SET_QUIZSETTOPIC","SET_QUESTION_BY_TOPIC","SET_SCORE_TOPIC","SET_QUESTION_ID","fetchQuizzes","dispatch","fetch","headers","then","res","json","questions","success","type","payload","fetchQuizsets","quizsets","fetchQuestions","topic","method","quizset","fetchQuestion","id","authorization","localStorage","token","quiz","fetchScores","scores","fetchScore","score","fetchUsers","users","fetchUser","user","fetchAdmins","admins","getQuizsetTopic","fetchQuizsetbyTopic","fetchQuizset","getScoreTopic","data","getQuestionId","Header","handleNav","nav","setState","activeNav","publicHeader","className","activeClassName","to","protectedHeader","isAdmin","state","onClick","props","role","aria-label","this","isLogged","React","Component","connect","HomePage","src","alt","srcset","NewQuiz","onChange","target","name","value","checkProgress","createQuiz","event","question","A","B","C","D","answer","history","preventDefault","body","JSON","stringify","options","push","length","onSubmit","class","placeholder","selected","disabled","withRouter","EditQuiz","editQuiz","questionId","quizzes","Loader","Quizset","input","createRef","handleChange","current","handleSubmit","handleDelete","deleteQuizset","quizsetno","ref","map","set","completedByUsers","includes","_id","Login","errorHandler","email","password","invalidEmail","invalidPassword","userLogin","URL","setItem","currentUser","message","errors","invalidUsername","text","Signup","username","newUser","progress","Profile","updateUser","profile","clear","sino","Date","createdAt","toDateString","PlayQuiz","handlePage","activeIndex","activeOption","verifyAnswer","option","submitAnswer","updateScore","questionSet","quizsetByTopic","score_toipc","ListQuizzes","updateTopic","Home","updateState","getQuizId","quizId","currentLoggedUser","handleLogin","publicRoutes","path","exact","protectedRoutes","Scores","isLoggedin","loggedUser","INITIAL_STATE","Score","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbc08260.chunk.js","sourcesContent":["export const SET_QUIZZES = \"SET_QUIZZES\";\nexport const SET_USERS = \"SET_USERS\";\nexport const SET_USER = \"SET_USER\";\nexport const SET_ADMINS = \"SET_ADMINS\";\nexport const SET_QUIZSETS = \"SET_QUIZSETS\";\nexport const SET_QUESTIONS = \"SET_QUESTIONS\";\nexport const SET_QUESTION = \"SET_QUESTION\";\nexport const SET_SCORES = \"SET_SCORES\";\nexport const SET_SCORE = \"SET_SCORE\";\nexport const SET_QUIZSET = \"SET_QUIZSET\";\nexport const SET_QUIZSETTOPIC = \"SET_QUIZSETTOPIC\";\nexport const SET_QUESTION_BY_TOPIC = \"SET_QUESTION_BY_TOPIC\";\nexport const SET_SCORE_TOPIC = \"SET_SCORE_TOPIC\";\nexport const SET_QUESTION_ID = \"SET_QUESTION_ID\";\n","import {\n  SET_QUIZZES,\n  SET_USERS,\n  SET_USER,\n  SET_ADMINS,\n  SET_QUIZSETS,\n  SET_QUESTIONS,\n  SET_QUESTION,\n  SET_SCORES,\n  SET_SCORE,\n  SET_QUIZSETTOPIC,\n  SET_QUIZSET,\n  SET_QUESTION_BY_TOPIC,\n  SET_SCORE_TOPIC,\n  SET_QUESTION_ID\n} from \"../types\";\n\nfunction setQuizzes(payload) {\n  return {\n    type: SET_QUIZZES,\n    payload\n  };\n}\n\nfunction setUsers(payload) {\n  return {\n    type: SET_USERS,\n    payload\n  };\n}\n\nfunction setUser(payload) {\n  return {\n    type: SET_USER,\n    payload\n  };\n}\n\nfunction setAdmins(payload) {\n  return {\n    type: SET_ADMINS,\n    payload\n  };\n}\n\nfunction setQuizsets(payload) {\n  return {\n    type: SET_QUIZSETS,\n    payload\n  };\n}\nfunction setQuestions(payload) {\n  return {\n    type: SET_QUESTIONS,\n    payload\n  };\n}\nfunction setQuestion(payload) {\n  return {\n    type: SET_QUESTION,\n    payload\n  };\n}\n\nfunction setScores(payload) {\n  return {\n    type: SET_SCORES,\n    payload\n  };\n}\n\nfunction setScore(payload) {\n  return {\n    type: SET_SCORE,\n    payload\n  };\n}\n\nfunction setQuizset(payload) {\n  return {\n    type: SET_QUIZSET,\n    payload\n  };\n}\nfunction setQuizsetTopic(payload) {\n  return {\n    type: SET_QUIZSETTOPIC,\n    payload\n  };\n}\n\nfunction setQuestionbyTopic(payload) {\n  return {\n    type: SET_QUESTION_BY_TOPIC,\n    payload\n  };\n}\n\nfunction setScoreTopic(payload) {\n  return {\n    type: SET_SCORE_TOPIC,\n    payload\n  };\n}\n\nfunction setQuestionId(payload) {\n  return {\n    type: SET_QUESTION_ID,\n    payload\n  };\n}\n\nexport function fetchQuizzes() {\n  return dispatch => {\n    fetch(\"/api/v1/quizzes\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(questions => {\n        if (questions.success) {\n          dispatch(setQuizzes(questions));\n        }\n      });\n  };\n}\n\nexport function fetchQuizsets() {\n  return dispatch => {\n    fetch(\"/api/v1/quizsets\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(quizsets => {\n        if (quizsets.success) {\n          dispatch(setQuizsets(quizsets));\n        }\n      });\n  };\n}\n\nexport function fetchQuestions(topic) {\n  return dispatch => {\n    fetch(`/api/v1/quizzes/${topic}/questions`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(quizset => {\n        if (quizset.success) {\n          dispatch(setQuestions(quizset));\n        }\n      });\n  };\n}\n\nexport function fetchQuestion(id) {\n  return dispatch => {\n    fetch(`/api/v1/quizzes/${id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.token\n      }\n    })\n      .then(res => res.json())\n      .then(quiz => {\n        if (quiz.success) {\n          dispatch(setQuestion(quiz));\n        }\n      });\n  };\n}\n\nexport function fetchScores() {\n  return dispatch => {\n    fetch(`/api/v1/user/scores`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.token\n      }\n    })\n      .then(res => res.json())\n      .then(scores => {\n        if (scores.success) {\n          dispatch(setScores(scores));\n        }\n      });\n  };\n}\n\nexport function fetchScore() {\n  return dispatch => {\n    fetch(`/api/v1/user/score`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.token\n      }\n    })\n      .then(res => res.json())\n      .then(score => {\n        if (score.success) {\n          dispatch(setScore(score));\n        }\n      });\n  };\n}\n\nexport function fetchUsers() {\n  return dispatch => {\n    fetch(\"/api/v1/users\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(users => {\n        if (users.success) {\n          dispatch(setUsers(users));\n        }\n      });\n  };\n}\n\nexport function fetchUser() {\n  return dispatch => {\n    fetch(\"/api/v1/user\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.token\n      }\n    })\n      .then(res => res.json())\n      .then(user => {\n        if (user.success) {\n          dispatch(setUser(user));\n        }\n      });\n  };\n}\n\nexport function fetchAdmins() {\n  return dispatch => {\n    fetch(\"/api/v1/admins\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(admins => {\n        if (admins.success) {\n          dispatch(setAdmins(admins));\n        }\n      });\n  };\n}\n\nexport function createQuizset(quizset) {\n  return dispatch => {\n    fetch(\"/api/v1/quizsets\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.token\n      },\n      body: JSON.stringify({\n        topic: quizset\n      })\n    })\n      .then(res => res.json())\n      .then(quizset => {\n        if (quizset.success) {\n          dispatch(fetchQuizsets());\n        }\n      });\n  };\n}\n\nexport function deleteQuizset(id) {\n  return dispatch => {\n    fetch(`/api/v1/quizsets/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.token\n      }\n    })\n      .then(res => res.json())\n      .then(quizset => {\n        if (quizset.success) {\n          dispatch(fetchQuizsets());\n        }\n      });\n  };\n}\n\nexport function createQuestion(topic, question, A, B, C, D, answer, history) {\n  return dispatch => {\n    fetch(`/api/v1/quizsets/${topic}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.token\n      },\n      body: JSON.stringify({\n        question,\n        answer,\n        options: {\n          A,\n          B,\n          C,\n          D\n        }\n      })\n    })\n      .then(res => res.json())\n      .then(quiz => {\n        if (quiz.success) {\n          dispatch(fetchQuizsets());\n          dispatch(fetchQuizsetbyTopic(topic));\n          history.push(\"/quizsets\");\n        }\n      });\n  };\n}\n\nexport function getQuizsetTopic(topic) {\n  return dispatch => {\n    dispatch(setQuizsetTopic(topic));\n  };\n}\n\nexport function fetchQuizsetbyTopic(topic) {\n  return dispatch => {\n    fetch(`/api/v1/quizsets/${topic}`, {\n      method: \"GET\"\n    })\n      .then(res => res.json())\n      .then(quizset => {\n        if (quizset.success) {\n          dispatch(setQuestionbyTopic(quizset));\n        }\n      });\n  };\n}\n\nexport function fetchQuizset(quizset) {\n  return dispatch => {\n    dispatch(setQuizset(quizset));\n  };\n}\n\nexport function getScoreTopic(data) {\n  return dispatch => {\n    dispatch(setScoreTopic(data));\n  };\n}\n\nexport function updateScore(score, quizset) {\n  return dispatch => {\n    fetch(\"/api/v1/user\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.token\n      },\n      body: JSON.stringify({\n        score,\n        quizset\n      })\n    })\n      .then(res => res.json())\n      .then(user => {\n        if (user.success) {\n          dispatch(fetchScore());\n        }\n      });\n  };\n}\n\nexport function updateUser(username, email, profile) {\n  return dispatch => {\n    fetch(\"/api/v1/user\", {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.token\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        profile\n      })\n    })\n      .then(res => res.json())\n      .then(user => {\n        if (user.success) {\n          dispatch(fetchUser());\n        }\n      });\n  };\n}\n\nexport function deleteQuestion(topic, id) {\n  return dispatch => {\n    fetch(`/api/v1/quizsets/${topic}/question/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.token\n      }\n    })\n      .then(res => res.json())\n      .then(quizset => {\n        if (quizset.success) {\n          dispatch(fetchQuizsetbyTopic(topic));\n          dispatch(fetchQuizsets());\n        }\n      });\n  };\n}\n\nexport function getQuestionId(id) {\n  return dispatch => {\n    dispatch(setQuestionId(id));\n  };\n}\n\nexport function updateQuizset(id, topic, history) {\n  return dispatch => {\n    fetch(`/api/v1/quizsets/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.token\n      },\n      body: JSON.stringify({\n        topic\n      })\n    })\n      .then(res => res.json())\n      .then(quizset => {\n        if (quizset.success) {\n          dispatch(fetchQuizsets());\n          history.push(\"/quizsets\");\n        }\n      });\n  };\n}\nexport function editQuestion(id, question, answer, A, B, C, D, history, topic) {\n  return dispatch => {\n    fetch(`/api/v1/quizzes/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.token\n      },\n      body: JSON.stringify({\n        question,\n        answer,\n        options: {\n          A,\n          B,\n          C,\n          D\n        }\n      })\n    })\n      .then(res => res.json())\n      .then(question => {\n        if (question.success) {\n          dispatch(fetchQuizsetbyTopic(topic));\n          history.push(\"/quizzes/view\");\n        }\n      });\n  };\n}\n\nexport function completedByUsers(topic) {\n  return dispatch => {\n    fetch(`/api/v1/quizsets/${topic}/add`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.token\n      }\n    })\n      .then(res => res.json())\n      .then(quizset => {\n        if (quizset.success) {\n          dispatch(fetchQuizsets());\n        }\n      });\n  };\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FiHome, FiBook } from \"react-icons/fi\";\nimport { GoGraph } from \"react-icons/go\";\nimport { AiOutlineHistory, AiOutlineUser } from \"react-icons/ai\";\nimport { fetchScores, fetchScore } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      activeNav: \"home\"\n    };\n  }\n\n  handleNav = nav => {\n    this.setState({ activeNav: nav });\n  };\n\n  publicHeader = () => {\n    return (\n      <>\n        <div className=\"home\">\n          <Link\n            activeClassName=\"header_item_active\"\n            className=\"navbar-item\"\n            to=\"/\"\n          >\n            QuizApp\n          </Link>\n        </div>\n\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              <Link\n                activeClassName=\"header_item_active\"\n                className=\"button is-primary\"\n                to=\"/users/new\"\n              >\n                <strong>Sign up</strong>\n              </Link>\n              <Link\n                activeClassName=\"header_item_active\"\n                className=\"button is-light\"\n                to=\"/users/login\"\n              >\n                Login\n              </Link>\n              <Link\n                activeClassName=\"header_item_active\"\n                className=\"button is-light my_admin_button\"\n                to=\"/admins/login\"\n              >\n                Admin\n              </Link>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  protectedHeader = isAdmin => {\n    return (\n      <>\n        <div className=\"header_items\">\n          <Link\n            className={\n              this.state.activeNav === \"home\"\n                ? \"header_item_active\"\n                : \"header_item\"\n            }\n            to=\"/\"\n            onClick={() => this.handleNav(\"home\")}\n          >\n            <FiHome />\n          </Link>\n          <Link\n            className={\n              this.state.activeNav === \"new_quiz\"\n                ? \"header_item_active\"\n                : \"header_item\"\n            }\n            to=\"/quizsets\"\n            onClick={() => this.handleNav(\"new_quiz\")}\n          >\n            <FiBook />\n          </Link>\n          {!isAdmin ? (\n            <Link\n              className={\n                this.state.activeNav === \"score\"\n                  ? \"header_item_active\"\n                  : \"header_item\"\n              }\n              to=\"/score\"\n              onClick={() => {\n                this.handleNav(\"score\");\n                this.props.dispatch(fetchScore());\n              }}\n            >\n              <AiOutlineHistory />\n            </Link>\n          ) : null}\n          <Link\n            to=\"/scores\"\n            className={\n              this.state.activeNav === \"progress\"\n                ? \"header_item_active\"\n                : \"header_item\"\n            }\n            onClick={() => {\n              this.handleNav(\"progress\");\n              this.props.dispatch(fetchScores());\n            }}\n          >\n            <GoGraph />\n          </Link>\n          <Link\n            className={\n              this.state.activeNav === \"profile\"\n                ? \"header_item_active\"\n                : \"header_item\"\n            }\n            to=\"/user\"\n            onClick={() => this.handleNav(\"profile\")}\n          >\n            <AiOutlineUser />\n          </Link>\n        </div>\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <nav className=\"header\" role=\"navigation\" aria-label=\"main navigation\">\n          {localStorage.token || this.props.isLogged\n            ? this.protectedHeader(this.props.isAdmin)\n            : this.publicHeader()}\n        </nav>\n      </>\n    );\n  }\n}\n\nexport default connect()(Header);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst HomePage = () => {\n  return (\n    <>\n      <div className=\"homepage\">\n        <span className=\"brain\">🧠</span>\n        <figure>\n          {localStorage.token ? (\n            <img src=\"/images/question.svg\" alt=\"\" srcset=\"\" />\n          ) : (\n            <img src=\"/images/homepage.svg\" alt=\"\" srcset=\"\" />\n          )}\n        </figure>\n        <p className=\"title\">Take your Quiz!</p>\n        <Link to={localStorage.token ? \"/quizsets\" : \"/users/login\"}>\n          {localStorage.token ? (\n            <button className=\"button_signin started is-success\">\n              GET STARTED\n            </button>\n          ) : (\n            <button className=\"button_signup started is-success\">\n              GET STARTED\n            </button>\n          )}\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createQuestion } from \"../actions\";\n\nclass NewQuiz extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      question: null,\n      answer: null,\n      A: null,\n      B: null,\n      C: null,\n      D: null\n    };\n  }\n\n  onChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value }, () => this.checkProgress());\n  };\n\n  createQuiz = event => {\n    event.preventDefault();\n    this.props.dispatch(\n      createQuestion(\n        this.props.topic,\n        this.state.question,\n        this.state.A,\n        this.state.B,\n        this.state.C,\n        this.state.D,\n        this.state.answer,\n        this.props.history\n      )\n    );\n  };\n  checkProgress = () => {\n    if (\n      this.state.question &&\n      !this.state.A &&\n      !this.state.B &&\n      !this.state.C &&\n      !this.state.D &&\n      !this.state.answer\n    ) {\n      return \"filled filled1\";\n    } else if (\n      this.state.question &&\n      this.state.A &&\n      !this.state.B &&\n      !this.state.C &&\n      !this.state.D &&\n      !this.state.answer\n    ) {\n      return \"filled filled2\";\n    } else if (\n      this.state.question &&\n      this.state.A &&\n      this.state.B &&\n      !this.state.C &&\n      !this.state.D &&\n      !this.state.answer\n    ) {\n      return \" filled filled3\";\n    } else if (\n      this.state.question &&\n      this.state.A &&\n      this.state.B &&\n      this.state.C &&\n      !this.state.D &&\n      !this.state.answer\n    ) {\n      return \"filled filled4\";\n    } else if (\n      this.state.question &&\n      this.state.A &&\n      this.state.B &&\n      this.state.C &&\n      this.state.D &&\n      !this.state.answer\n    ) {\n      return \"filled filled5\";\n    } else if (\n      this.state.question &&\n      this.state.A &&\n      this.state.B &&\n      this.state.C &&\n      this.state.D &&\n      this.state.answer\n    ) {\n      return \"filled filled6\";\n    } else {\n      return \"filled\";\n    }\n  };\n  render() {\n    return (\n      <>\n        <div className=\"signup_container\">\n          <div className=\"arrow_container\">\n            <Link to=\"/quizsets\" className=\"back_arrow\">\n              <p>←</p>\n            </Link>\n            <p className=\"signup\">Question</p>\n          </div>\n          <p className=\"question_no\">\n            {this.props.quizset && this.props.quizset.questions.length + 1}\n          </p>\n          <p\n            className={\n              this.state.question &&\n              this.state.A &&\n              this.state.B &&\n              this.state.C &&\n              this.state.D &&\n              this.state.answer\n                ? \"tick tick2\"\n                : \"tick\"\n            }\n          >\n            ✓\n          </p>\n          <div className=\"progress_container_question\">\n            <p className={this.checkProgress()}></p>\n          </div>\n          <form onSubmit={this.createQuiz} className=\"new_question_form\">\n            <div class=\"control\">\n              <textarea\n                className=\"textarea_question\"\n                name=\"question\"\n                placeholder={`Type the question for ${this.props.quizset &&\n                  this.props.quizset.topic}`}\n                onChange={this.onChange}\n                value={this.state.question}\n              ></textarea>\n            </div>\n            <label class=\"label_options\">Options</label>\n\n            <input\n              className=\"input_question is-primary\"\n              type=\"text\"\n              name=\"A\"\n              onChange={this.onChange}\n              value={this.state.A}\n              placeholder=\"A\"\n            />\n            <input\n              className=\"input_question  is-primary\"\n              type=\"text\"\n              name=\"B\"\n              onChange={this.onChange}\n              value={this.state.B}\n              placeholder=\"B\"\n            />\n            <input\n              className=\"input_question  is-primary\"\n              type=\"text\"\n              name=\"C\"\n              onChange={this.onChange}\n              value={this.state.C}\n              placeholder=\"C\"\n            />\n            <input\n              className=\"input_question  is-primary\"\n              type=\"text\"\n              name=\"D\"\n              onChange={this.onChange}\n              value={this.state.D}\n              placeholder=\"D\"\n            />\n            <select\n              className=\"select_question\"\n              name=\"answer\"\n              onChange={this.onChange}\n            >\n              <option selected=\"true\" disabled=\"disabled\">\n                Select your answer\n              </option>\n              <option>{this.state.A}</option>\n              <option>{this.state.B}</option>\n              <option>{this.state.C}</option>\n              <option>{this.state.D}</option>\n            </select>\n            <button className=\"button_signup is-success\">Create</button>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\nfunction mapStateToProps({ quizset }) {\n  return {\n    topic: quizset.topic,\n    quizset: quizset.quizset\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(NewQuiz));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport {MdUpdate} from 'react-icons/md'\nimport { editQuestion } from \"../actions\";\n\nclass EditQuiz extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      question: null,\n      answer: null,\n      A: null,\n      B: null,\n      C: null,\n      D: null,\n      quizset: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(`/api/v1/quizzes/${this.props.questionId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.token\n      }\n    })\n      .then(res => res.json())\n      .then(question => {\n        if (question.success) {\n          this.setState({\n            question: question.question.question,\n            answer: question.question.answer,\n            A: question.question.options.A,\n            B: question.question.options.B,\n            C: question.question.options.C,\n            D: question.question.options.D,\n            quizset: question.question.quizset\n          });\n        }\n      });\n  }\n\n  onChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  editQuiz = event => {\n    event.preventDefault();\n    this.props.dispatch(\n      editQuestion(\n        this.props.questionId,\n        this.state.question,\n        this.state.answer,\n        this.state.A,\n        this.state.B,\n        this.state.C,\n        this.state.D,\n        this.props.history,\n        this.state.quizset\n      )\n    );\n  };\n\n  checkProgress = () => {\n    if (\n      this.state.question &&\n      !this.state.A &&\n      !this.state.B &&\n      !this.state.C &&\n      !this.state.D &&\n      !this.state.answer\n    ) {\n      return \"filled filled1\";\n    } else if (\n      this.state.question &&\n      this.state.A &&\n      !this.state.B &&\n      !this.state.C &&\n      !this.state.D &&\n      !this.state.answer\n    ) {\n      return \"filled filled2\";\n    } else if (\n      this.state.question &&\n      this.state.A &&\n      this.state.B &&\n      !this.state.C &&\n      !this.state.D &&\n      !this.state.answer\n    ) {\n      return \" filled filled3\";\n    } else if (\n      this.state.question &&\n      this.state.A &&\n      this.state.B &&\n      this.state.C &&\n      !this.state.D &&\n      !this.state.answer\n    ) {\n      return \"filled filled4\";\n    } else if (\n      this.state.question &&\n      this.state.A &&\n      this.state.B &&\n      this.state.C &&\n      this.state.D &&\n      !this.state.answer\n    ) {\n      return \"filled filled5\";\n    } else if (\n      this.state.question &&\n      this.state.A &&\n      this.state.B &&\n      this.state.C &&\n      this.state.D &&\n      this.state.answer\n    ) {\n      return \"filled filled6\";\n    } else {\n      return \"filled\";\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"signup_container\">\n          <div className=\"arrow_container\">\n            <Link to=\"/quizsets\" className=\"back_arrow\">\n              <p>←</p>\n            </Link>\n            <p className=\"signup\">Question</p>\n          </div>\n          <p className=\"question_no\">\n            <MdUpdate  className={\n              this.state.question &&\n              this.state.A &&\n              this.state.B &&\n              this.state.C &&\n              this.state.D &&\n              this.state.answer\n                ? \"updated\"\n                : \"update\"\n            }/>\n          </p>\n          <p\n            className={\n              this.state.question &&\n              this.state.A &&\n              this.state.B &&\n              this.state.C &&\n              this.state.D &&\n              this.state.answer\n                ? \"tick tick2\"\n                : \"tick\"\n            }\n          >\n            ✓\n          </p>\n          <div className=\"progress_container_question\">\n            <p className={this.checkProgress()}></p>\n          </div>\n          <form onSubmit={this.editQuiz} className=\"new_question_form\">\n            <div class=\"control\">\n              <textarea\n                className=\"textarea_question\"\n                name=\"question\"\n                placeholder={`Edit the question for ${this.state.quizset}`}\n                onChange={this.onChange}\n                value={this.state.question}\n              ></textarea>\n            </div>\n            <label class=\"label_options\">Options</label>\n\n            <input\n              className=\"input_question is-primary\"\n              type=\"text\"\n              name=\"A\"\n              onChange={this.onChange}\n              value={this.state.A}\n              placeholder=\"A\"\n            />\n            <input\n              className=\"input_question  is-primary\"\n              type=\"text\"\n              name=\"B\"\n              onChange={this.onChange}\n              value={this.state.B}\n              placeholder=\"B\"\n            />\n            <input\n              className=\"input_question  is-primary\"\n              type=\"text\"\n              name=\"C\"\n              onChange={this.onChange}\n              value={this.state.C}\n              placeholder=\"C\"\n            />\n            <input\n              className=\"input_question  is-primary\"\n              type=\"text\"\n              name=\"D\"\n              onChange={this.onChange}\n              value={this.state.D}\n              placeholder=\"D\"\n            />\n            <select\n              className=\"select_question\"\n              name=\"answer\"\n              onChange={this.onChange}\n              value={this.state.answer}\n            >\n              <option>{this.state.A}</option>\n              <option>{this.state.B}</option>\n              <option>{this.state.C}</option>\n              <option>{this.state.D}</option>\n            </select>\n            <button className=\"button_signup is-success\">Update</button>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps({ quizzes }) {\n  return {\n    questionId: quizzes.questionId\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(EditQuiz));\n","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <>\n      <div className=\"box\">\n\n        <span className=\"loader\"></span>\n        <span className=\"loading\">Loading...</span>\n      </div>\n    </>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { MdQuestionAnswer } from \"react-icons/md\";\nimport Loader from \"../components/Loader\";\nimport {\n  AiOutlinePlayCircle,\n  AiOutlinePlus,\n  AiOutlinePlusCircle,\n  AiOutlineDelete,\n  AiOutlineEdit\n} from \"react-icons/ai\";\nimport { FaBook } from \"react-icons/fa\";\nimport {\n  createQuizset,\n  fetchQuestions,\n  deleteQuizset,\n  getQuizsetTopic,\n  fetchQuizset,\n  fetchQuizsetbyTopic\n} from \"../actions\";\n\nclass Quizset extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      quizset: null\n    };\n  }\n  input = React.createRef();\n  handleChange = ({ target: { name, value } }) => {\n    this.input.current.value = null;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.dispatch(createQuizset(this.state.quizset));\n  };\n  handleDelete = id => {\n    this.props.dispatch(deleteQuizset(id));\n  };\n  render() {\n    let quizsetno = 0;\n    return (\n      <>\n        <div className=\"quizsets_container\">\n          <div className=\"arrow_container\">\n            <Link to=\"/\" className=\"back_arrow\">\n              <p>←</p>\n            </Link>\n            <p className=\"signup\">Quizsets</p>\n          </div>\n          <div className=\"quizsets_container_small\">\n            {this.props.isAdmin ? (\n              <form className=\"quizset_form\" onSubmit={this.handleSubmit}>\n                <p className=\"add_quizset\">\n                  <AiOutlinePlus />\n                  <FaBook />\n                </p>\n\n                <input\n                  className=\"create_quizset\"\n                  name=\"quizset\"\n                  value={this.state.quizset}\n                  onChange={this.handleChange}\n                  placeholder=\"Create a quizset\"\n                  ref={this.input}\n                />\n              </form>\n            ) : null}\n            <ul className=\"quizset_container\">\n              {this.props.quizsets && this.props.user ? (\n                this.props.quizsets.map(set => (\n                  <li\n                    className={\n                      set.completedByUsers.includes(\n                        this.props.user._id\n                      )\n                        ? \"quizset_completed\"\n                        : \"quizset\"\n                    }\n                    onClick={() =>\n                      this.props.dispatch(fetchQuestions(set.topic))\n                    }\n                  >\n                    <p\n                      className={\n                        set.completedByUsers.includes(\n                          this.props.user._id\n                        )\n                          ? \"quizset_no_completed\"\n                          : \"quizset_no \"\n                      }\n                    >\n                      {++quizsetno}\n                    </p>\n                    <div className={\n                      set.completedByUsers.includes(\n                        this.props.user._id\n                      )\n                        ? \"quizset_content_completed\"\n                        : \"quizset_content\"\n                    }>\n                      <span  className={\n                      set.completedByUsers.includes(\n                        this.props.user._id\n                      )\n                        ? \"quizset_name_completed\"\n                        : \"quizset_name\"\n                    }>{set.topic}</span>\n                      {this.props.isAdmin ? (\n                        <div className=\"edit_quizset_container\">\n                          ...\n                          <span className=\"add_question\">\n                            <Link\n                              to=\"/quizzes/new\"\n                              className=\"add_question_link\"\n                            >\n                              <AiOutlinePlusCircle\n                                onClick={() => {\n                                  this.props.dispatch(\n                                    getQuizsetTopic(set.topic)\n                                  );\n                                  this.props.dispatch(fetchQuizset(set));\n                                }}\n                              />\n                            </Link>\n                          </span>\n                          <span className=\"delete_quizset\">\n                            <AiOutlineDelete\n                              onClick={() => this.handleDelete(set._id)}\n                            />\n                          </span>\n                        </div>\n                      ) : null}\n                      <div\n                        className={\n                          set.completedByUsers.includes(\n                          this.props.user._id\n                          )\n                            ? \"quiz_count_container_completed\"\n                            : \"quiz_count_container\"\n                        }\n                      >\n                        <span className={  set.completedByUsers.includes(\n                          this.props.user._id\n                          ) ? \"quiz_count_completed\" : \"quiz_count\"}>\n                          <MdQuestionAnswer className=\"quiz_logo\" />{\" \"}\n                          {set.questions.length} Questions\n                        </span>\n                        {this.props.isAdmin ? (\n                          <span className=\"edit_button\">\n                            <Link\n                              to=\"/quizzes/view\"\n                              className=\"add_question_link\"\n                            >\n                              <AiOutlineEdit\n                                onClick={() =>\n                                  this.props.dispatch(\n                                    fetchQuizsetbyTopic(set.topic)\n                                  )\n                                }\n                              />\n                            </Link>\n                          </span>\n                        ) : (\n                          <span className=\"play_button\">\n                            <Link\n                              to=\"questions\"\n                              className={\n                                set.completedByUsers.includes(\n                                  this.props.user._id\n                                )\n                                  ? \"add_question_link_completed\"\n                                  : \"add_question_link\"\n                              }\n                            >\n                              <AiOutlinePlayCircle\n                                onClick={() =>\n                                  this.props.dispatch(\n                                    fetchQuizsetbyTopic(set.topic)\n                                  )\n                                }\n                              />\n                            </Link>\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </li>\n                ))\n              ) : (\n                <Loader />\n              )}\n            </ul>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps({ quizzes, users }) {\n  return {\n    quizsets: quizzes.quizsets && quizzes.quizsets.quizsets,\n    user: users.user && users.user.user\n  };\n}\n\nexport default connect(mapStateToProps)(Quizset);\n","import React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      message: null,\n      errors: {\n        invalidUsername: null,\n        invalidEmail: null,\n        invalidPassword: null\n      }\n    };\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  errorHandler = event => {\n    event.preventDefault();\n    if (!this.state.email && !this.state.password) {\n      this.setState({\n        invalidEmail: \"Email can't be empty!\",\n        invalidPassword: \"Password can't be empty!\"\n      });\n    } else if (!this.state.email && this.state.password) {\n      this.setState({ invalidEmail: \"Email can't be empty!\" });\n    } else if (this.state.email && !this.state.password) {\n      this.setState({ invalidPassword: \"Password can't be empty!\" });\n    } else {\n      this.userLogin();\n    }\n  };\n\n  userLogin = () => {\n    fetch(this.props.URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password\n      })\n    })\n      .then(res => res.json())\n      .then(user => {\n        if (user.success) {\n          localStorage.setItem(\"token\", user.token);\n          this.props.isLogged(true);\n          this.props.currentUser();\n          this.props.history.push(\"/\");\n        } else {\n          this.setState({ message: user.message });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"signin_container\">\n        <Link to=\"/admins/login\" className=\"admin_link\">○</Link>\n          <figure className=\"signin_fig_container\">\n            <img src=\"/images/signin.svg\" alt=\"\" srcset=\"\" />\n          </figure>\n          <p className=\"Quizapp\">Quiz App</p>\n          <p className=\"login_user \">{this.props.text}</p>\n          <form onSubmit={this.errorHandler} className=\"signin_form\">\n            <label className=\"label_invalid is-danger\">{this.state.message}</label>{\" \"}\n          \n            <label className=\"label_email \">Email</label>{\" \"}\n            <label className=\"incorrect_container\">\n              <label className=\"label_incorrect is-danger\">\n                {!this.state.email ? this.state.invalidEmail : \"\"}\n              </label>\n            </label>\n            <input\n              className={\n                !this.state.email && this.state.invalidEmail\n                  ? \"input_signin is-false\"\n                  : \"input_signin is-success\"\n              }\n              type=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n              placeholder=\"Enter your email\"\n            />\n            <label className=\"label_password \">Password</label>\n            <label className=\"incorrect_container\">\n              <label className=\"label_incorrect is-danger\">\n                {!this.state.password ? this.state.invalidPassword : \"\"}\n              </label>\n            </label>\n            <input\n              className={\n                !this.state.password && this.state.invalidPassword\n                  ? \"input_signin is-false\"\n                  : \"input_signin is-success\"\n              }\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              placeholder=\"Enter your password\"\n              onChange={this.handleChange}\n            />\n            <p className=\"control \">\n              <button className=\"button_signin is-success\" type=\"submit\">\n                Sign in\n              </button>\n            </p>\n          </form>\n          <p className=\"register_here\">\n            Dont have an account?{\" \"}\n            <Link to=\"/users/new\">\n              <small className=\"register_now\">Register now</small>\n            </Link>\n          </p>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\n// import { MdArrowBack } from \"react-icons/md\";\n\nclass Signup extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      username: null,\n      email: null,\n      password: null,\n      progress: null,\n      errors: {\n        invalidUsername: null,\n        invalidEmail: null,\n        invalidPassword: null\n      }\n    };\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value }, () => this.checkProgress());\n  };\n\n  errorHandler = event => {\n    event.preventDefault();\n    if (!this.state.username && !this.state.email && !this.state.password) {\n      this.setState({\n        invalidUsername: \"Username can't be empty\",\n        invalidEmail: \"Email can't be empty!\",\n        invalidPassword: \"Password can't be empty!\"\n      });\n    } else if (\n      !this.state.username &&\n      this.state.email &&\n      this.state.password\n    ) {\n      this.setState({ invalidUsername: \"Username can't be empty!\" });\n    } else if (\n      this.state.username &&\n      !this.state.email &&\n      this.state.password\n    ) {\n      this.setState({ invalidEmail: \"Email can't be empty!\" });\n    } else if (\n      this.state.username &&\n      this.state.email &&\n      !this.state.password\n    ) {\n      this.setState({ invalidPassword: \"Password can't be empty!\" });\n    } else if (\n      !this.state.username &&\n      !this.state.email &&\n      this.state.password\n    ) {\n      this.setState({\n        invalidUsername: \"Username can't be empty!\",\n        invalidEmail: \"Email can't be empty!\"\n      });\n    } else if (\n      this.state.username &&\n      !this.state.email &&\n      !this.state.password\n    ) {\n      this.setState({\n        invalidEmail: \"Email can't be empty!\",\n        invalidPassword: \"Password can't be empty!\"\n      });\n    } else if (\n      !this.state.username &&\n      this.state.email &&\n      !this.state.password\n    ) {\n      this.setState({\n        invalidUsername: \"Username can't be empty!\",\n        invalidPassword: \"Password can't be empty!\"\n      });\n    } else if (!this.state.email.includes(\".com\")) {\n      this.setState({ invalidEmail: \"Invalid email format\" });\n    } else {\n      this.newUser();\n    }\n  };\n\n  newUser = () => {\n    fetch(\"/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password\n      })\n    })\n      .then(res => res.json())\n      .then(user => {\n        if (user.success) {\n          this.props.history.push(\"/users/login\");\n        }\n      });\n  };\n\n  checkProgress = () => {\n    if (this.state.username && !this.state.email && !this.state.password) {\n      return \"progress progress1\";\n    } else if (\n      this.state.username &&\n      this.state.email &&\n      !this.state.password\n    ) {\n      return \"progress progress2\";\n    } else if (this.state.username && this.state.email && this.state.password) {\n      return \"progress progress3\";\n    } else {\n      return \"progress\";\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"signup_container\">\n          <div className=\"arrow_container\">\n            <Link to=\"/users/login\" className=\"back_arrow\">\n              <p>←</p>\n            </Link>\n            <p className=\"signup\">Sign Up</p>\n          </div>\n          <div className=\"progress_container\">\n            <span className={this.checkProgress()}></span>\n          </div>\n          <p className=\"introduce_signup\">Introduce Yourself</p>\n          <p className=\"enter_details\">Enter username,email and password</p>\n          <figure className=\"singup_img\">\n            <img src=\"/images/signup.svg\" alt=\"\" srcset=\"\" />\n          </figure>\n          <form onSubmit={this.errorHandler} className=\"signup_form\">\n            <label className=\"label_email \">Username</label>\n            <label className=\"incorrect_container\">\n              <p className=\"label_incorrect is-danger\">\n                {!this.state.username ? this.state.invalidUsername : \"\"}\n              </p>\n            </label>\n            <input\n              className={\n                !this.state.username && this.state.invalidUsername\n                  ? \"input_signin is-false\"\n                  : \"input_signin is-success\"\n              }\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Enter your username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n\n            <label className=\"label_email\">Email</label>\n            <label className=\"incorrect_container\">\n              <p className=\"label_incorrect is-danger\">\n                {!this.state.email || !this.state.email.includes(\".com\")\n                  ? this.state.invalidEmail\n                  : \"\"}\n              </p>\n            </label>\n            <input\n              className={\n                !this.state.email && this.state.invalidEmail\n                  ? \"input_signin is-false\"\n                  : \"input_signin is-success\"\n              }\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n\n            <label className=\"label_email\">Password</label>\n            <label className=\"incorrect_container\">\n              <p className=\"label_incorrect is-danger\">\n                {!this.state.password ? this.state.invalidPassword : \"\"}{\" \"}\n              </p>\n            </label>\n            <input\n              className={\n                !this.state.password && this.state.invalidPassword\n                  ? \"input_signin is-false\"\n                  : \"input_signin is-success\"\n              }\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter your password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n\n            <button className=\"button_signup is-success\" type=\"submit\">\n              Continue\n            </button>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(Signup);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  AiOutlineLogout,\n  AiOutlineMail,\n  AiOutlineFileImage,\n  AiOutlineUser\n} from \"react-icons/ai\";\nimport Loader from \"./Loader\";\nimport { FiClipboard } from \"react-icons/fi\";\n// import { MdUpdate } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { updateUser } from \"../actions\";\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      username: null,\n      email: null,\n      profile: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/api/v1/user\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: localStorage.token\n      }\n    })\n      .then(res => res.json())\n      .then(user => {\n        if (user.success) {\n          this.setState({\n            username: user.user.username,\n            email: user.user.email,\n            profile: user.user.profile\n          });\n        }\n      });\n  }\n\n  onChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  updateUser = () => {\n    this.props.dispatch(\n      updateUser(this.state.username, this.state.email, this.state.profile)\n    );\n  };\n  render() {\n    return (\n      <>\n        {this.props.user ? (\n          <div className=\"profile_container\">\n            <form className=\"form_profile\">\n              <div className=\"profile_name_pic\">\n                <figure className=\"profile_pic\">\n                  <img\n                    className=\"profile_img\"\n                    src={this.state.profile}\n                    alt=\"\"\n                    srcset=\"\"\n                  />\n                </figure>\n                <input\n                  onChange={this.onChange}\n                  className=\"input_username\"\n                  name=\"username\"\n                  value={this.state.username}\n                />\n              </div>\n              <AiOutlineUser className=\"icon_profile1\" />\n              <span className=\"profile_user_admin\">\n                {this.props.user.isAdmin ? \"Admin\" : \"User\"}\n              </span>\n              <div className=\"icon_input_container\">\n                <AiOutlineFileImage className=\"icon_profile\" />\n                <input\n                  onChange={this.onChange}\n                  className=\"input_profilepic input_profile_\"\n                  value={this.state.profile}\n                  name=\"profile\"\n                  placeholder=\"Add a profile pic\"\n                />\n              </div>\n\n              <div className=\"icon_input_container\">\n                <AiOutlineMail className=\"icon_profile\" />\n                <input\n                  onChange={this.onChange}\n                  className=\"input_profile input_profile_\"\n                  name=\"email\"\n                  value={this.state.email}\n                />\n              </div>\n            </form>\n\n            {!this.props.user.isAdmin ? (\n              <Link to=\"/score\" className=\"score_link\">\n                <FiClipboard className=\"icon_profile1\"/>\n                <span className=\"Profile_score\">Score</span>\n              </Link>\n            ) : null}\n            {/* <p onClick={this.updateUser} className=\"update_user\">\n              <MdUpdate  />\n            </p> */}\n            <Link to=\"/\">\n              <p\n                className=\"logout\"\n                onClick={() => {\n                  localStorage.clear();\n                  this.props.isLogged(false);\n                }}\n              >\n                <AiOutlineLogout />\n              </p>\n            </Link>\n          </div>\n        ) : (\n          <Loader />\n        )}\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps({ users }) {\n  return {\n    user: users.user && users.user.user\n  };\n}\n\nexport default connect(mapStateToProps)(Profile);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Loader from \"./Loader\";\n\nconst Score = props => {\n  let sino = 0;\n\n  return (\n    <>\n      <section className=\" scores_container\">\n        <figure className=\"scores_fig\">\n          <img className=\"win_img\" src=\"/images/win.png\" alt=\"\" srcset=\"\" />\n        </figure>\n        <section className=\"scores_container_small\">\n          <p className=\"scores\">Rank</p>\n          <p className=\"scores player\">Player</p>\n          <p className=\"scores score\">Score</p>\n          <p className=\"scores\">Quizset</p>\n        </section>\n        <div className=\"all_score_container\">\n        {props.scores && props.user ? (\n          props.scores.scores.map(score => (\n            <div\n              className={\n                props.user && props.user.user.username === score.user.username\n                  ? \"main_container username_score\"\n                  : \"main_container\"\n              }\n            >\n              <p className= {props.user && props.user.user.username === score.user.username\n                  ? \"rank my_rank\"\n                  : \"rank\"}\n              >{++sino}</p>\n              <p className=\"username_cont_score\">\n                <figure className=\"score_img_user\">\n                  <img src={score.user.profile} alt=\"\" srcset=\"\" />\n                </figure>\n                <p className=\"username_scores\">{score.user.username}</p>\n              </p>\n\n              <p className=\"score_scores\">{score.score}</p>\n              <p className=\"quizset_scores\">{score.quizset}</p>\n            </div>\n          ))\n        ) : (\n          <Loader />\n        )}\n        </div>\n       \n      </section>\n    </>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    scores: state.users.scores,\n    user: state.users.user\n  };\n};\n\nexport default connect(mapStateToProps)(Score);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Score = props => {\n  let sino = 0;\n  return (\n    <>\n      <section className=\"scores_container\">\n      <figure className=\"score_fig\">\n          <img className=\"win_img\" src=\"/images/progress.svg\" alt=\"\" srcset=\"\" />\n        </figure>\n        <section className=\"scores_container_small2\">\n          <p className=\"scores\">SI.NO</p>\n          <p className=\"scores\">Quizset</p>\n          <p className=\"scores\">Score</p>\n          <p className=\"scores\">Time</p>\n        </section>\n        <div className=\"all_score_container all_score_container2\">\n        {props.score &&\n          props.score.score.map(score => (\n            <div className=\"main_container main_container2\">\n              <p className=\"rank \">{++sino}</p>\n              <p className=\"quizset_scores\">{score.quizset}</p>\n              <p className=\"score_scores\">{score.score}</p>\n              <p className=\"date_score\">{new Date(score.createdAt).toDateString()}</p>\n            </div>\n          ))}\n          </div>\n      </section>\n    </>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    score: state.users.score\n  };\n}\nexport default connect(mapStateToProps)(Score);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../components/Loader\";\nimport { getScoreTopic, updateScore, completedByUsers } from \"../actions\";\n\nclass PlayQuiz extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selected: false,\n      activeIndex: 0,\n      activeOption: null\n    };\n    this.score = 0;\n  }\n\n  handlePage = () => {\n    this.setState({\n      activeIndex: ++this.state.activeIndex,\n      selected: false,\n      activeOption: null\n    });\n  };\n\n  verifyAnswer = (option, answer) => {\n    if (option === answer) {\n      this.score++;\n      this.setState({\n        activeOption: option,\n        selected: true\n      });\n    } else {\n      this.setState({ activeOption: option, selected: true });\n    }\n  };\n  submitAnswer = (score, topic) => {\n    this.props.dispatch(\n      getScoreTopic({\n        score,\n        topic\n      })\n    );\n    this.props.dispatch(updateScore(score, topic));\n    if (!this.props.quizset.completedByUsers.includes(this.props.user._id)) {\n      this.props.dispatch(completedByUsers(topic));\n    }\n  };\n\n  render() {\n    let questionSet =\n      this.props.quizset &&\n      this.props.quizset.questions.length &&\n      this.props.quizset.questions[this.state.activeIndex];\n    return (\n      <>\n        {this.props.quizset ? (\n          <div className=\"play_quiz_container\">\n            <div className=\"play_quiz_container_small\">\n              <div className=\"arrow_container\">\n                <Link to=\"/quizsets\" className=\"back_arrow back_arrow_playquiz\">\n                  <p>←</p>\n                </Link>\n                <p className=\"signup top_content_plazquiz\">\n                  {this.props.quizset.topic}\n                </p>\n              </div>\n              <p className=\"question_count_play_quiz\">\n                Question <span>{this.state.activeIndex + 1}</span>\n                <span>/{this.props.quizset.questions.length}</span>\n                <p className=\"question_title\">\n                  {this.props.quizset.questions.length\n                    ? questionSet.question\n                    : \"No questions yet!\"}\n                </p>\n              </p>\n            </div>\n            <section\n              className={\n                this.state.selected\n                  ? \"questions_container_playquiz_disable\"\n                  : \"questions_container_playquiz\"\n              }\n            >\n              {this.props.quizset.questions.length ? (\n                <>\n                  <button\n                    className={\n                      this.state.activeOption === questionSet.options.A\n                        ? \"option_quizplay active_option\"\n                        : \"option_quizplay\"\n                    }\n                    onClick={() =>\n                      this.verifyAnswer(\n                        questionSet.options.A,\n                        questionSet.answer\n                      )\n                    }\n                  >\n                    {questionSet.options.A}\n                  </button>\n                  <button\n                    className={\n                      this.state.activeOption === questionSet.options.B\n                        ? \"option_quizplay active_option\"\n                        : \"option_quizplay\"\n                    }\n                    onClick={() =>\n                      this.verifyAnswer(\n                        questionSet.options.B,\n                        questionSet.answer\n                      )\n                    }\n                  >\n                    {questionSet.options.B}\n                  </button>\n                  <button\n                    className={\n                      this.state.activeOption === questionSet.options.C\n                        ? \"option_quizplay active_option\"\n                        : \"option_quizplay\"\n                    }\n                    onClick={() =>\n                      this.verifyAnswer(\n                        questionSet.options.C,\n                        questionSet.answer\n                      )\n                    }\n                  >\n                    {questionSet.options.C}\n                  </button>\n                  <button\n                    className={\n                      this.state.activeOption === questionSet.options.D\n                        ? \"option_quizplay active_option\"\n                        : \"option_quizplay\"\n                    }\n                    onClick={() =>\n                      this.verifyAnswer(\n                        questionSet.options.D,\n                        questionSet.answer\n                      )\n                    }\n                  >\n                    {questionSet.options.D}\n                  </button>\n                </>\n              ) : null}\n            </section>\n\n            {this.state.activeIndex ===\n              this.props.quizset.questions.length - 1 && !this.props.isAdmin ? (\n              <Link to=\"/questions/scorecard\">\n                <button\n                  className=\"button_signup is-success\"\n                  onClick={() =>\n                    this.submitAnswer(this.score, questionSet.quizset)\n                  }\n                >\n                  Submit\n                </button>\n              </Link>\n            ) : (\n              <>\n                {\" \"}\n                {!this.props.isAdmin ? (\n                  <button\n                    className=\"button_signup is-success\"\n                    onClick={this.handlePage}\n                  >\n                    Next\n                  </button>\n                ) : (\n                  <button className=\"button_signup is-success\">\n                    Admin can't Play\n                  </button>\n                )}\n              </>\n            )}\n          </div>\n        ) : (\n          <Loader />\n        )}\n      </>\n    );\n  }\n}\nfunction mapStateToProps({ quizset, users }) {\n  return {\n    quizset: quizset.quizsetByTopic && quizset.quizsetByTopic.quizset,\n    user: users.user && users.user.user\n  };\n}\n\nexport default connect(mapStateToProps)(PlayQuiz);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Loader from \"./Loader\";\nimport { fetchScores } from \"../actions\";\n\nconst ScoreCard = props => {\n  return (\n    <>\n      {props.score ? (\n        <section className=\"score_card_container\">\n          <figure className=\"score_figure\">\n            <img src=\"/images/winners.svg\" alt=\"\" srcset=\"\" />\n          </figure>\n          <p className=\"congo\">Congratulations</p>\n          <p className=\"completed_score\">You have successfully completed</p>\n          <p className=\"model_name\">\n            {props.score ? props.score.topic : \"no quiz\"}\n          </p>\n          <p className=\"score_scorecard\">\n            score : {props.score ? props.score.score : 0}\n          </p>\n          <div className=\"scorecard_buttons_container\">\n            <Link to=\"/scores\">\n              <button\n                className=\"button_signin button_scorecard\"\n                onClick={() => props.dispatch(fetchScores())}\n              >\n                View Leaderboard\n              </button>\n            </Link>\n            <Link to=\"/quizsets\">\n              <button className=\"button_signin button_scorecard\">\n                Start New Quiz\n              </button>\n            </Link>\n          </div>\n        </section>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nfunction mapStateToProps({ score }) {\n  return {\n    score: score.score_toipc\n  };\n}\n\nexport default connect(mapStateToProps)(ScoreCard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { AiOutlineDelete, AiOutlineEdit } from \"react-icons/ai\";\nimport { deleteQuestion, updateQuizset } from \"../actions\";\n\n// relative\nimport Loader from \"../components/Loader\";\nimport { getQuestionId } from \"../actions\";\n\nclass ListQuizzes extends React.Component {\n  constructor() {\n    super();\n    this.state = { topic: null };\n  }\n\n  onChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  updateTopic = event => {\n    event.preventDefault();\n    this.props.dispatch(\n      updateQuizset(\n        this.props.quizset._id,\n        this.state.topic,\n        this.props.history\n      )\n    );\n  };\n\n  render() {\n    let quizsetno = 0;\n    let { dispatch } = this.props;\n\n    return (\n      <>\n        {this.props.quizset ? (\n          <section className=\"question_container_big\">\n            <div className=\"arrow_container\">\n              <Link to=\"/quizsets\" className=\"back_arrow\">\n                <p>←</p>\n              </Link>\n              <form onSubmit={this.updateTopic}>\n                <input\n                  className=\"signup input_quizset_edit\"\n                  placeholder={this.props.quizset.topic}\n                  name=\"topic\"\n                  value={this.state.topic}\n                  onChange={this.onChange}\n                />\n              </form>\n            </div>\n            <ul className=\"questions_container\">\n              {this.props.quizset.questions.map(question => (\n                <li className=\"quizset question\">\n                  <span className=\"questions_no\">{++quizsetno}</span>\n                  <div className=\"quizset_content questions_content\">\n                    <span className=\"quizset_name question_name\">\n                      {question.question}\n                    </span>\n                    {this.props.isAdmin ? (\n                      <div className=\"options_container\">\n                        <span className=\"option1\">\n                          <span className=\"dots\">\n                            {question.answer === question.options.A ? \"◉\" : \"○\"}\n                          </span>{\" \"}\n                          {question.options.A}\n                        </span>\n                        <span className=\"option1\">\n                          <span className=\"dots\">\n                            {question.answer === question.options.B ? \"◉\" : \"○\"}\n                          </span>{\" \"}\n                          {question.options.B}\n                        </span>\n                        <span className=\"option1\">\n                          <span className=\"dots\">\n                            {question.answer === question.options.C ? \"◉\" : \"○\"}\n                          </span>{\" \"}\n                          {question.options.C}\n                        </span>\n                        <span className=\"option1\">\n                          <span className=\"dots\">\n                            {question.answer === question.options.D ? \"◉\" : \"○\"}\n                          </span>{\" \"}\n                          {question.options.D}\n                        </span>\n                      </div>\n                    ) : null}\n                    {this.props.isAdmin ? (\n                      <div className=\"edit_quizset_container edit_questions_container\">\n                        ...\n                        <span className=\"add_question\">\n                          <Link\n                            to=\"/quizzes/edit\"\n                            className=\"add_question_link edit_questions_link\"\n                          >\n                            <AiOutlineEdit\n                              onClick={() =>\n                                dispatch(getQuestionId(question._id))\n                              }\n                            />\n                          </Link>\n                        </span>\n                        <span className=\"delete_quizset delete_question_link\">\n                          <AiOutlineDelete\n                            onClick={() =>\n                              dispatch(\n                                deleteQuestion(\n                                  this.props.quizset.topic,\n                                  question._id\n                                )\n                              )\n                            }\n                          />\n                        </span>\n                      </div>\n                    ) : null}\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </section>\n        ) : (\n          <Loader />\n        )}\n      </>\n    );\n  }\n}\n\nfunction mapStateTorops({ quizset }) {\n  return {\n    quizset: quizset.quizsetByTopic && quizset.quizsetByTopic.quizset\n  };\n}\nexport default connect(mapStateTorops)(withRouter(ListQuizzes));\n","import React from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n// relative imports\n\nimport {\n  fetchQuizzes,\n  fetchUsers,\n  fetchUser,\n  fetchAdmins,\n  fetchQuizsets,\n  fetchQuestions,\n  fetchQuestion,\n  fetchScores,\n  fetchScore\n} from \"../actions\";\nimport Header from \"../components/Header\";\nimport HomePage from \"../components/HomePage\";\nimport NewQuiz from \"./NewQuiz\";\nimport EditQuiz from \"./EditQuiz\";\nimport Quizset from \"../components/Quizset\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport Profile from \"../components/Profile\";\nimport Scores from \"../components/Scores\";\nimport Score from \"../components/Score\";\nimport PlayQuiz from \"./PlayQuiz\";\nimport ScoreCard from \"../components/ScoreCard\";\nimport ListQuizzes from \"./ListQuizzes\";\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      quizId: null,\n      loggedUser: null,\n      isLogged: false,\n      quizzes: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchQuizzes());\n    this.props.dispatch(fetchUsers());\n    this.props.dispatch(fetchUser());\n    this.props.dispatch(fetchAdmins());\n    this.props.dispatch(fetchQuizsets());\n    this.props.dispatch(fetchScores());\n    this.props.dispatch(fetchScore());\n    if (localStorage.token) {\n      this.setState({ isLogged: true });\n    }\n  }\n\n  updateState = quizset => {\n    this.props.dispatch(fetchQuizsets());\n    this.props.dispatch(fetchQuestions(quizset));\n  };\n  getQuizId = id => {\n    this.setState({ quizId: id }, () => this.props.dispatch(fetchQuestion(id)));\n  };\n  currentLoggedUser = () => {\n    this.props.dispatch(fetchUser());\n  };\n\n  handleLogin = isLogged => {\n    this.setState({ isLogged });\n  };\n\n  publicRoutes = () => {\n    return (\n      <>\n        <Route path=\"/users/new\">\n          <Signup />\n        </Route>\n        <Route path=\"/users/login\">\n          <Login\n            text=\"User\"\n            URL={\"/api/v1/users/login\"}\n            isLogged={this.handleLogin}\n            currentUser={this.currentLoggedUser}\n          />\n        </Route>\n        <Route path=\"/admins/login\">\n          <Login\n            text=\"Admin\"\n            URL={\"/api/v1/admins/login\"}\n            isLogged={this.handleLogin}\n            currentUser={this.currentLoggedUser}\n          />\n        </Route>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n      </>\n    );\n  };\n\n  protectedRoutes = isAdmin => {\n    return (\n      <>\n        <Route path=\"/user\">\n          <>\n            <Profile user={this.props.user} isLogged={this.handleLogin} />\n          </>\n        </Route>\n\n        <Route exact path=\"/questions\">\n          <PlayQuiz isAdmin={isAdmin} />\n        </Route>\n\n        <Route path=\"/questions/scorecard\">\n          <ScoreCard />\n        </Route>\n        <Route path=\"/quizzes/view\">\n          <ListQuizzes isAdmin={isAdmin} />\n        </Route>\n        <Route exact path=\"/quizzes/edit\">\n          <EditQuiz quizId={this.state.quizId} updateState={this.updateState} />\n        </Route>\n\n        <Route path=\"/quizsets\">\n          <>\n            <Quizset isAdmin={isAdmin} />\n          </>\n        </Route>\n        <Route path=\"/quizzes/new\">{isAdmin ? <NewQuiz /> : null}</Route>\n        <Route path=\"/scores\">\n          <>\n            <Scores />\n          </>\n        </Route>\n        <Route path=\"/score\">\n          <>\n            <Score />\n          </>\n        </Route>\n\n        <Route exact path=\"/\">\n          <>\n            <HomePage />\n          </>\n        </Route>\n        <Header isLoggedin={this.props.isLogged} isAdmin={isAdmin} />\n      </>\n    );\n  };\n\n  render() {\n    let isAdmin =\n      this.props.user &&\n      this.props.user.success &&\n      this.props.user.user.isAdmin;\n\n    return (\n      <>\n        <main className=\"main\">\n          <Switch>\n            {this.state.isLogged\n              ? this.protectedRoutes(isAdmin)\n              : this.publicRoutes()}\n          </Switch>\n        </main>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps({ quizzes, users, admins }) {\n  return {\n    quizzes: quizzes.quizzes,\n    quizsets: quizzes.quizsets,\n    users,\n    user: users.user,\n    admins\n  };\n}\n\nexport default connect(mapStateToProps)(Home);\n","import {\n  SET_QUIZZES,\n  SET_QUIZSETS,\n  SET_QUESTIONS,\n  SET_QUESTION,\n  SET_QUESTION_ID\n} from \"../types\";\n\nlet INITIAL_STATE = {\n  quizzes: null,\n  quizsets: null,\n  questions: null,\n  question: null,\n  questionId: null\n};\n\nexport default function Quizzes(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_QUIZZES:\n      return {\n        ...state,\n        quizzes: action.payload\n      };\n    case SET_QUIZSETS:\n      return {\n        ...state,\n        quizsets: action.payload\n      };\n    case SET_QUESTIONS:\n      return {\n        ...state,\n        questions: action.payload\n      };\n    case SET_QUESTION:\n      return {\n        ...state,\n        question: action.payload\n      };\n    case SET_QUESTION_ID:\n      return {\n        ...state,\n        questionId: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_USERS, SET_SCORES, SET_SCORE, SET_USER } from \"../types\";\n\nlet INITIAL_STATE = {\n  users: null,\n  user: null,\n  scores: null,\n  score: null\n};\n\nexport default function Users(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_USERS:\n      return {\n        ...state,\n        users: action.payload\n      };\n    case SET_USER: {\n      return {\n        ...state,\n        user: action.payload\n      };\n    }\n    case SET_SCORES:\n      return {\n        ...state,\n        scores: action.payload\n      };\n    case SET_SCORE:\n      return {\n        ...state,\n        score: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_ADMINS } from \"../types\";\n\nlet INITIAL_STATE = {\n  admins: null\n};\n\nexport default function Admins(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_ADMINS:\n      return {\n        ...state,\n        admins: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_QUIZSETTOPIC, SET_QUIZSET, SET_QUESTION_BY_TOPIC } from \"../types\";\n\nlet INITIAL_STATE = {\n  topic: null,\n  quizset: null,\n  quizsetByTopic: null\n};\n\nexport default function Quizset(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_QUIZSETTOPIC:\n      return {\n        ...state,\n        topic: action.payload\n      };\n    case SET_QUIZSET:\n      return {\n        ...state,\n        quizset: action.payload\n      };\n    case SET_QUESTION_BY_TOPIC:\n      return {\n        ...state,\n        quizsetByTopic: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_SCORE_TOPIC } from \"../types\";\n\nlet INITIAL_STATE = {\n  score_toipc: null\n};\n\nfunction Score(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_SCORE_TOPIC:\n      return {\n        ...state,\n        score_toipc: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport default Score;\n","import { combineReducers } from \"redux\";\nimport quizzes from \"./quizzes\";\nimport users from \"./users\";\nimport admins from \"./admins\";\nimport quizset from \"./quizset\";\nimport score from \"./score\";\nconst rootReducer = combineReducers({\n  quizzes,\n  users,\n  admins,\n  quizset,\n  score\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers/rootReducer\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\n//relative imports\n\nimport Home from \"./containers/Home\";\nimport store from \"./store\";\nimport \"bulma/css/bulma.css\";\nimport \"./stylesheets/style.scss\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <div className=\"App\">\n          <Home />\n        </div>\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}